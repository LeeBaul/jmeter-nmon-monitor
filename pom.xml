<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.libaolu.jmeter.nmon</groupId>
    <artifactId>jmeter-nmon-monitor</artifactId>
    <version>2.1.0</version>

    <packaging>jar</packaging>
    <name>JMeterNmonMonitor</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <developers>
        <developer>
            <id>libaolu</id>
            <name>libaolu</name>
            <email>847586537@qq.com</email>
        </developer>
    </developers>

    <dependencies>
        <dependency>
            <groupId>org.apache.jmeter</groupId>
            <artifactId>ApacheJMeter_core</artifactId>
            <version>5.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jmeter</groupId>
            <artifactId>jorphan</artifactId>
            <version>5.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.11.1</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.25</version>
        </dependency>
        <dependency>
            <groupId>com.jcraft</groupId>
            <artifactId>jsch</artifactId>
            <version>0.1.44-1</version>
        </dependency>
        <dependency>
            <groupId>ch.ethz.ganymed</groupId>
            <artifactId>ganymed-ssh2</artifactId>
            <version>build210</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.57</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.lic</include>
                    <include>**/*.txt</include>
                </includes>
                <filtering>false</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <!-- 指定项目编译时的java版本和编码方式 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <configuration>
                    <target>1.8</target>
                    <source>1.8</source>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--            <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-assembly-plugin</artifactId>
                            <version>3.1.1</version>
                            <configuration>
                                <descriptorRefs>
                                    <descriptorRef>jar-with-dependencies</descriptorRef>
                                </descriptorRefs>
                               &lt;!&ndash; <archive>
                                    <manifest>
                                        <mainClass>com.libaolu.jmeter.AggregateGraphReport</mainClass>
                                    </manifest>
                                </archive>&ndash;&gt;
                            </configuration>
                            <executions>
                                <execution>
                                    <id>make-assembly</id>
                                    <phase>package</phase>
                                    <goals>
                                        <goal>single</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.0.14</version>
                <executions>
                    <execution>
                        <!-- 混淆时刻这里是打包的时候混淆-->
                        <phase>package</phase>
                        <goals>
                            <!-- 使用插件的什么功能当然是混淆-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <proguardVersion>6.0.2</proguardVersion>
                    <obfuscate>true</obfuscate>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>
                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>
                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <!--<proguardInclude>./proguard.cfg</proguardInclude>-->
                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>

                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <!--<option>-dontshrink</option>-->

                        <!-- 不做优化（变更代码实现逻辑）-->
                        <!--<option>-dontoptimize</option>-->

                        <!-- 不路过非公用类文件及成员-->
                        <option>-dontskipnonpubliclibraryclasses</option>
                        <option>-dontskipnonpubliclibraryclassmembers</option>

                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
                        <option>-allowaccessmodification</option>

                        <!-- 确定统一的混淆类的成员名称来增加混淆,防止冲突-->
                        <option>-useuniqueclassmembernames</option>

                        <!-- 不混淆所有包名，Spring配置中有大量固定写法的包名-->
                        <option>-keeppackagenames</option>

                        <!-- 不混淆所有特殊的类-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>

                        <!-- 不混淆所有的set/get方法，毕竟项目中使用的部分第三方框架（例如Shiro）会用到大量的set/get映射-->
                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>

                        <!--keep 所有类的protected成员
                        <option>-keep public class * {public protected *;}</option>-->

                        <option>-keep public class com.libaolu.nmon.control.*{*;}</option>
                        <option>-keep public class com.libaolu.nmon.sampler.*{*;}</option>

                        <option>-keep public class com.libaolu.nmon.utils.LeeUtils{*;}</option>
                        <option>-keep public class com.libaolu.nmon.utils.Base64Util{*;}</option>
                        <option>-keep public class com.libaolu.nmon.utils.RsaUtil{*;}</option>

                        <!--Keep - Applications. Keep all application classes, along with their 'main' methods-->
                        <option>-keepclasseswithmembers public class * {public static void main(java.lang.String[]);}</option>

                        <!--Also keep - Enumerations. Keep the special static methods that are required in enumeration classes-->
                        <option>-keep class * extends java.sql.Driver</option>

                        <!--Also keep AbstractSamplerGui -->
                        <option>-keep class * extends org.apache.jmeter.samplers.gui.AbstractSamplerGui</option>

                        <!--Also keep AbstractSampler -->
                        <option>-keep class * extends org.apache.jmeter.samplers.AbstractSampler</option>

                        <!--Also keep - Database drivers. Keep all implementations of java.sql.Driver.-->
                        <option>-keepclassmembers enum  * { public static **[] values();public static ** valueOf(java.lang.String);}</option>

                        <!-- 解决 java.lang.ClassFormatError: LVTT entry for xxx类的异常-->
                        <option>-optimizations !code/allocation/variable</option>

                        <!--不显示警告信息，如果显示则会出现Error无法完成混淆！-->
                        <option>-dontwarn **</option>

                    </options>

                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了-->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jce.jar</lib>
                      <!--  <lib>${java.home}/lib/security/local_policy.jar</lib>
                        <lib>${java.home}/lib/security/US_export_policy.jar</lib>
                        <lib>${java.home}/lib/ext/sunjce_provider.jar</lib>-->
                    </libs>


                    <addMavenDescriptor>false</addMavenDescriptor>
                    <injar>${project.build.finalName}.jar</injar>
                    <outjar>${project.build.finalName}-pg.jar</outjar>
                    <!-- 输出目录-->
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <!--<exclusions><exclusion></exclusion></exclusions>-->

                    <!-- 加载文件的过滤器，就是你的工程目录了-->
                    <!--<inFilter>com/libaolu/jmeter/test/**</inFilter>-->
                    <!--<inFilter>com/libaolu/nmon/**</inFilter>-->

                    <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <injar>classes</injar>
                </configuration>

                <dependencies>
                    <!-- 使用6.0.2版本来混淆 -->
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>6.0.2</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>